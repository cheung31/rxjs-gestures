{"version":3,"sources":["../../src/operators/PressOperator.js"],"names":[],"mappings":";;;;;;;;;;;AAAA;;AACA;;;;;;;;IAEa,a,WAAA,a;AACT,2BAAY,KAAZ,EAAmB,MAAnB,EAA2B,QAA3B,EAAqC;AAAA;;AACjC,aAAK,KAAL,GAAa,KAAb;AACA,aAAK,MAAL,GAAc,MAAd;AACA,aAAK,QAAL,GAAgB,QAAhB;AACH;;;;6BACI,U,EAAY,M,EAAQ;AACrB,mBAAO,OAAO,UAAP,CAAkB,IAAI,eAAJ,CAAoB,UAApB,EACoB,KAAK,KADzB,EAEoB,KAAK,MAFzB,EAGoB,KAAK,QAHzB,CAAlB,CAAP;AAIH;;;;;;IAGQ,e,WAAA,e;;;AACT,6BAAY,WAAZ,EAAyB,KAAzB,EAAgC,MAAhC,EAAwC,QAAxC,EAAkD;AAAA;;AAAA,uGACxC,WADwC;;AAE9C,cAAK,KAAL,GAAa,KAAb;AACA,cAAK,MAAL,GAAc,MAAd;AACA,cAAK,QAAL,GAAgB,QAAhB;AAJ8C;AAKjD;;;;8BACK,M,EAAQ;AAAA,gBAEF,KAFE,GAE0B,IAF1B,CAEF,KAFE;AAAA,gBAEK,MAFL,GAE0B,IAF1B,CAEK,MAFL;AAAA,gBAEa,QAFb,GAE0B,IAF1B,CAEa,QAFb;AAAA,gBAGF,eAHE,GAGkB,QAHlB,CAGF,eAHE;AAAA,gBAIF,GAJE,GAIM,MAJN,CAIF,GAJE;;AAKV,gBAAM,UAAU,QAAQ,OAAxB;AACA,gBAAM,cAAc,UAAU,IAAV,GAAiB,uBAAS,GAAT,CAArC;;AAEA,gBAAM,QAAQ,UACV,SAAS,IAAT,CAAc,eAAd,CADU,GAEV,SAAS,IAAT,CAAc,eAAd,EAA+B,MAA/B,CAAsC,WAAtC,CAFJ;;AAIA,gBAAM,OAAO,UACT,SAAS,GAAT,CAAa,eAAb,CADS,GAET,SAAS,GAAT,CAAa,eAAb,EAA8B,MAA9B,CAAqC,WAArC,CAFJ;;AAIA,gBAAM,UAAU,UACZ,SAAS,MAAT,CAAgB,eAAhB,CADY,GAEZ,SAAS,MAAT,CAAgB,eAAhB,EAAiC,MAAjC,CAAwC,WAAxC,CAFJ;;AAIA,6FAAY,SAAS,KAAT,CAAe,MAAf,EAAuB,EAAE,YAAF,EAAS,cAAT,EAAvB,EAA0C,KAA1C,EAAiD,IAAjD,EAAuD,OAAvD,CAAZ;AACH","file":"PressOperator.js","sourcesContent":["import { selectId } from '../support';\nimport { Subscriber } from 'rxjs';\n\nexport class PressOperator {\n    constructor(delay, radius, Gestures) {\n        this.delay = delay;\n        this.radius = radius;\n        this.Gestures = Gestures;\n    }\n    call(subscriber, source) {\n        return source._subscribe(new PressSubscriber(subscriber,\n                                                     this.delay,\n                                                     this.radius,\n                                                     this.Gestures));\n    }\n}\n\nexport class PressSubscriber extends Subscriber {\n    constructor(destination, delay, radius, Gestures) {\n        super(destination);\n        this.delay = delay;\n        this.radius = radius;\n        this.Gestures = Gestures;\n    }\n    _next(starts) {\n\n        const { delay, radius, Gestures } = this;\n        const { topLevelElement } = Gestures;\n        const { key } = starts;\n        const isMouse = key === 'mouse';\n        const selectPoint = isMouse ? null : selectId(key);\n\n        const moves = isMouse ?\n            Gestures.move(topLevelElement) :\n            Gestures.move(topLevelElement).filter(selectPoint);\n\n        const ends = isMouse ?\n            Gestures.end(topLevelElement) :\n            Gestures.end(topLevelElement).filter(selectPoint);\n\n        const cancels = isMouse ?\n            Gestures.cancel(topLevelElement) :\n            Gestures.cancel(topLevelElement).filter(selectPoint);\n\n        super._next(Gestures.press(starts, { delay, radius }, moves, ends, cancels));\n    }\n}\n"]}