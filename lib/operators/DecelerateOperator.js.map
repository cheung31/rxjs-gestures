{"version":3,"sources":["../../src/operators/DecelerateOperator.js"],"names":[],"mappings":"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","file":"DecelerateOperator.js","sourcesContent":["import { Subscriber } from 'rxjs';\nimport { DeltaSubscriber } from './DeltaOperator';\n\nexport class DecelerateOperator {\n    constructor(u, normalForce, scheduler) {\n        this.u = u;\n        this.normalForce = normalForce;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source._subscribe(new DecelerateSubscriber(\n            subscriber, this.u, this.normalForce, this.scheduler\n        ));\n    }\n}\n\nexport class DecelerateSubscriber extends DeltaSubscriber {\n    constructor(destination, u, normalForce, scheduler) {\n        super(destination, null, scheduler);\n        this.u = u;\n        this.hasEvent = false;\n        this.scheduler = scheduler;\n        this.normalForce = normalForce;\n    }\n    next(event) {\n        super.next((this.hasEvent = true) && event);\n    }\n    complete() {\n\n        if (!this.hasEvent) {\n            return super.complete();\n        }\n\n        const { u, normalForce, prev, scheduler } = this;\n        const { interval, magnitude, direction } = prev;\n        const duration = Math.sqrt((magnitude / interval) / (normalForce * u));\n        const distanceX = Math.cos(direction) * magnitude * duration;\n        const distanceY = Math.sin(direction) * magnitude * duration;\n\n        this.add(scheduler.schedule(DecelerateSubscriber.dispatch, 0, {\n            time: scheduler.now(),\n            start: prev, event: prev,\n            duration: duration * 100,\n            subscriber: this.destination,\n            distanceX, distanceY, scheduler,\n        }));\n    }\n    static dispatch(state) {\n\n        const { time, start, event,\n                scheduler, subscriber,\n                distanceX, distanceY, duration } = state;\n\n        const now = scheduler.now();\n        const elapsed = now - time;\n\n        if (elapsed > duration) {\n            subscriber.complete();\n        } else {\n            const easingFunc = quadOut;\n            const pageX = easingFunc(elapsed, start.pageX, distanceX, duration);\n            const pageY = easingFunc(elapsed, start.pageY, distanceY, duration);\n            subscriber.next(state.event = {\n                ...event,\n                time: now, pageX, pageY,\n                interval: now - event.time,\n                deltaX: pageX - event.pageX,\n                deltaY: pageY - event.pageY,\n                totalX: pageX - event.pageX + event.totalX,\n                totalY: pageY - event.pageY + event.totalY,\n                localX: easingFunc(elapsed, start.localX, distanceX, duration),\n                localY: easingFunc(elapsed, start.localY, distanceY, duration),\n                clientX: easingFunc(elapsed, start.clientX, distanceX, duration),\n                clientY: easingFunc(elapsed, start.clientY, distanceY, duration),\n                screenX: easingFunc(elapsed, start.screenX, distanceX, duration),\n                screenY: easingFunc(elapsed, start.screenY, distanceY, duration),\n            });\n            this.schedule(state, 0);\n        }\n    }\n}\n\nfunction quadOut(time, begin, change, duration) {\n    return -change * (time = time / duration) * (time - 2) + begin;\n}\n"]}