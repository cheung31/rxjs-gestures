{"version":3,"sources":["../../src/operators/TapOperator.js"],"names":["TapOperator","timeout","radius","Gestures","subscriber","source","subscribe","TapSubscriber","destination","starts","topLevelElement","key","isMouse","selectPoint","ends","end","filter","cancels","cancel","tap"],"mappings":";;;;;;;;;;;AAAA;;AACA;;;;;;;;IAEaA,W,WAAAA,W;AACT,yBAAYC,OAAZ,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuC;AAAA;;AACnC,aAAKF,OAAL,GAAeA,OAAf;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACH;;;;6BACIC,U,EAAYC,M,EAAQ;AACrB,mBAAOA,OAAOC,SAAP,CAAiB,IAAIC,aAAJ,CAAkBH,UAAlB,EACkB,KAAKH,OADvB,EAEkB,KAAKC,MAFvB,EAGkB,KAAKC,QAHvB,CAAjB,CAAP;AAIH;;;;;;IAGQI,a,WAAAA,a;;;AACT,2BAAYC,WAAZ,EAAyBP,OAAzB,EAAkCC,MAAlC,EAA0CC,QAA1C,EAAoD;AAAA;;AAAA,kIAC1CK,WAD0C;;AAEhD,cAAKP,OAAL,GAAeA,OAAf;AACA,cAAKC,MAAL,GAAcA,MAAd;AACA,cAAKC,QAAL,GAAgBA,QAAhB;AAJgD;AAKnD;;;;8BACKM,M,EAAQ;AAAA,gBAEFR,OAFE,GAE4B,IAF5B,CAEFA,OAFE;AAAA,gBAEOC,MAFP,GAE4B,IAF5B,CAEOA,MAFP;AAAA,gBAEeC,QAFf,GAE4B,IAF5B,CAEeA,QAFf;AAAA,gBAGFO,eAHE,GAGkBP,QAHlB,CAGFO,eAHE;AAAA,gBAKFC,GALE,GAKMF,MALN,CAKFE,GALE;;AAMV,gBAAMC,UAAUD,QAAQ,OAAxB;AACA,gBAAME,cAAcD,UAAU,IAAV,GAAiB,uBAASD,GAAT,CAArC;;AAEA,gBAAMG,OAAOF,UACTT,SAASY,GAAT,CAAaL,eAAb,CADS,GAETP,SAASY,GAAT,CAAaL,eAAb,EAA8BM,MAA9B,CAAqCH,WAArC,CAFJ;;AAIA,gBAAMI,UAAUL,UACZT,SAASe,MAAT,CAAgBR,eAAhB,CADY,GAEZP,SAASe,MAAT,CAAgBR,eAAhB,EAAiCM,MAAjC,CAAwCH,WAAxC,CAFJ;;AAIA,gIAAYV,SAASgB,GAAT,CAAaV,MAAb,EAAqBK,IAArB,EAA2BG,OAA3B,EAAoC,EAAEhB,gBAAF,EAAWC,cAAX,EAApC,CAAZ;AACH","file":"TapOperator.js","sourcesContent":["import { selectId } from '../support';\nimport { Subscriber } from 'rxjs/Subscriber';\n\nexport class TapOperator {\n    constructor(timeout, radius, Gestures) {\n        this.timeout = timeout;\n        this.radius = radius;\n        this.Gestures = Gestures;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TapSubscriber(subscriber,\n                                                  this.timeout,\n                                                  this.radius,\n                                                  this.Gestures));\n    }\n}\n\nexport class TapSubscriber extends Subscriber {\n    constructor(destination, timeout, radius, Gestures) {\n        super(destination);\n        this.timeout = timeout;\n        this.radius = radius;\n        this.Gestures = Gestures;\n    }\n    _next(starts) {\n\n        const { timeout, radius, Gestures } = this;\n        const { topLevelElement } = Gestures;\n\n        const { key } = starts;\n        const isMouse = key === 'mouse';\n        const selectPoint = isMouse ? null : selectId(key);\n\n        const ends = isMouse ?\n            Gestures.end(topLevelElement) :\n            Gestures.end(topLevelElement).filter(selectPoint);\n\n        const cancels = isMouse ?\n            Gestures.cancel(topLevelElement) :\n            Gestures.cancel(topLevelElement).filter(selectPoint);\n\n        super._next(Gestures.tap(starts, ends, cancels, { timeout, radius }));\n    }\n}\n"]}