{"version":3,"sources":["../../src/operators/MultitouchOperator.js"],"names":["MultitouchOperator","subscriber","source","subscribe","MultitouchSubscriber","degToRad","Math","PI","destination","index","event","type","button","buttons","target","currentTarget","isTouch","deltaX","deltaY","deltaZ","pageX","pageY","clientX","clientY","screenX","screenY","touch","radiusX","radiusY","identifier","rotationAngle","touchesIndex","touches","changedTouches","touchesLen","length"],"mappings":"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","file":"MultitouchOperator.js","sourcesContent":["import { Point } from '../support';\nimport { Subscriber } from 'rxjs/Subscriber';\n\nexport class MultitouchOperator {\n    call(subscriber, source) {\n        return source.subscribe(new MultitouchSubscriber(subscriber));\n    }\n}\n\nconst degToRad = Math.PI / 180;\n\nexport class MultitouchSubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n        this.index = 0;\n    }\n    _next(event) {\n\n        if (event instanceof Point) {\n            return super._next(event);\n        }\n\n        const index = this.index++;\n        const { type, button, buttons,\n                currentTarget: target } = event;\n        const isTouch = (type[0] === 't');\n\n        if (!isTouch) {\n            const { deltaX = 0, deltaY = 0, deltaZ = 0 } = event;\n            const { pageX, pageY, clientX, clientY, screenX, screenY } = event;\n            super._next({\n                button, buttons,\n                deltaX, deltaY, deltaZ,\n                type, event, touch: event, target,\n                index, pageX, pageY, screenX, screenY,\n                clientX, clientY, radiusX: 1, radiusY: 1,\n                identifier: 'mouse', rotationAngle: 0\n            });\n        } else {\n            let touchesIndex = -1;\n            const touches = event.changedTouches;\n            const touchesLen = touches.length;\n            while (++touchesIndex < touchesLen) {\n                const touch = touches[touchesIndex];\n                const { identifier, pageX, pageY,\n                        screenX, screenY, clientX, clientY,\n                        radiusX = 1, radiusY = 1, rotationAngle = 0 } = touch;\n                super._next({\n                    button, buttons: 0,\n                    deltaX: 0, deltaY: 0, deltaZ: 0,\n                    type, event, touch, target, identifier,\n                    index, pageX, pageY, screenX, screenY,\n                    clientX, clientY, radiusX, radiusY,\n                    rotationAngle: rotationAngle * degToRad\n                });\n            }\n        }\n    }\n}\n\n/*\n// const changes = !isTouch ? [event] : Array.from(event.changedTouches);\n// const targets = !isTouch ? changes : reduceTouches(event.targetTouches);\n// const touches = !isTouch ? targets : changes.filter((touch) => (\n//     targets.hasOwnProperty(touch.identifier)\n// ));\nfunction reduceTouches(touches) {\n    return Array.from(touches).reduce((touches, touch) => ({\n        ...touches, [touch.identifier]: touch\n    }), {})\n}\n*/\n"]}