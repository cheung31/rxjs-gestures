{"version":3,"sources":["../../src/operators/NormalizeOperator.js"],"names":["NormalizeOperator","origin","Gestures","scheduler","undefined","subscriber","source","subscribe","NormalizeSubscriber","previous","sampleX","sampleY","sampleT","now","multitouchEvent","time","lastWindowTime","type","index","event","touch","target","screenX","screenY","pageX","pageY","clientX","clientY","deltaX","deltaY","deltaZ","radiusX","radiusY","rotationAngle","createOrigin","prevX","prevY","movementX","movementY","movementT","movementXTotal","movementYTotal","movementTTotal","sampleXTotal","sampleYTotal","sampleTTotal","distance","Math","sqrt","speed","direction","atan2","point","clone","x","y","targetX","targetY","targetPageX","targetPageY","targetClientX","targetClientY","targetScreenX","targetScreenY","identifier","topLevelElement","offsetParent","offsetLeft","offsetTop","scrollTop","scrollLeft","getBoundingClientRect","targetTop","top","targetLeft","left","targetRight","right","targetBottom","bottom","parentTop","parentLeft","parentRight","parentBottom","pageXOffset","pageYOffset","xOrigin","yOrigin","pageXOrigin","pageYOrigin","clientXOrigin","clientYOrigin","screenXOrigin","screenYOrigin","targetXOrigin","targetYOrigin","targetPageXOrigin","targetPageYOrigin","targetClientXOrigin","targetClientYOrigin","targetScreenXOrigin","targetScreenYOrigin"],"mappings":"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","file":"NormalizeOperator.js","sourcesContent":["import { Point } from '../support';\nimport { Subscriber } from 'rxjs/Subscriber';\n\nexport class NormalizeOperator {\n    constructor(origin, Gestures, scheduler) {\n        this.origin = origin || undefined;\n        this.Gestures = Gestures;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new NormalizeSubscriber(subscriber, this.origin, this.Gestures, this.scheduler));\n    }\n}\n\nexport class NormalizeSubscriber extends Subscriber {\n    constructor(subscriber, origin, Gestures, scheduler) {\n        super(subscriber);\n        this.origin = origin;\n        this.previous = origin;\n        this.Gestures = Gestures;\n        this.scheduler = scheduler;\n        this.sampleX = 0;\n        this.sampleY = 0;\n        this.sampleT = scheduler.now();\n    }\n    _next(multitouchEvent) {\n\n        if (multitouchEvent instanceof Point) {\n            return super._next(this.previous = multitouchEvent);\n        }\n\n        const time = this.scheduler.now();\n        let { origin, lastWindowTime } = this;\n        const { type, index, event, touch, target, screenX, screenY,\n                pageX, pageY, clientX, clientY, deltaX, deltaY, deltaZ,\n                radiusX = 1, radiusY = 1, rotationAngle = 0 } = multitouchEvent;\n\n        if (!origin) {\n            this.origin = origin = NormalizeSubscriber.createOrigin(\n                multitouchEvent, touch, time, this.Gestures\n            );\n        }\n\n        const { previous = origin } = this;\n        const { pageX: prevX, pageY: prevY } = previous;\n\n        const movementX = pageX - prevX;\n        const movementY = pageY - prevY;\n        const movementT = time - previous.time;\n        const movementXTotal = movementX + previous.movementXTotal;\n        const movementYTotal = movementY + previous.movementYTotal;\n        const movementTTotal = movementT + previous.movementTTotal;\n\n        let { sampleX, sampleY, sampleT } = this;\n        let sampleXTotal, sampleYTotal,\n            sampleTTotal = time - sampleT;\n\n        if (sampleTTotal >= 100) {\n            sampleXTotal = 0;\n            sampleYTotal = 0;\n            sampleTTotal = 1;\n            this.sampleT = sampleT = time;\n            this.sampleX = sampleX = pageX;\n            this.sampleY = sampleY = pageY;\n        } else {\n            sampleXTotal = pageX - sampleX;\n            sampleYTotal = pageY - sampleY;\n        }\n\n        const distance = Math.sqrt(sampleXTotal * sampleXTotal + sampleYTotal * sampleYTotal) || 0;\n        const speed = Math.sqrt(distance / (sampleTTotal || 1)) || 0;\n        const direction = Math.atan2(movementY / movementT, movementX / movementT) || 0;\n\n        const point = origin.clone();\n\n        point.type = type;\n        point.time = time;\n        point.index = index;\n        point.touch = touch;\n        point.event = event;\n        point.pageX = pageX;\n        point.pageY = pageY;\n        point.movementT = movementT;\n        point.movementX = movementX;\n        point.movementY = movementY;\n        point.deltaX = deltaX;\n        point.deltaY = deltaY;\n        point.deltaZ = deltaZ;\n        point.clientX = clientX;\n        point.clientY = clientY;\n        point.screenX = screenX;\n        point.screenY = screenY;\n        point.radiusX = radiusX;\n        point.radiusY = radiusY;\n        point.speed = speed;\n        point.direction = direction;\n        point.rotationAngle = rotationAngle;\n        point.movementXTotal = movementXTotal;\n        point.movementYTotal = movementYTotal;\n        point.movementTTotal = movementTTotal;\n\n        point.x += movementXTotal;\n        point.y += movementYTotal;\n        point.targetX += movementXTotal;\n        point.targetY += movementYTotal;\n        point.targetPageX += movementXTotal;\n        point.targetPageY += movementYTotal;\n        point.targetClientX += movementXTotal;\n        point.targetClientY += movementYTotal;\n        point.targetScreenX += movementXTotal;\n        point.targetScreenY += movementYTotal;\n\n        super._next(this.previous = point);\n    }\n    static createOrigin(event, touch, time, Gestures) {\n\n        const { identifier } = touch;\n        const { topLevelElement } = Gestures;\n        const { type, target, pageX, pageY,\n                clientX, clientY, screenX, screenY,\n                radiusX = 1, radiusY = 1, rotationAngle = 0 } = event;\n\n        const { offsetParent = topLevelElement,\n                offsetLeft, offsetTop, scrollTop, scrollLeft } = target;\n\n        const { top: targetTop, left: targetLeft,\n                right: targetRight, bottom: targetBottom } = target.getBoundingClientRect();\n\n        const { top: parentTop, left: parentLeft,\n                right: parentRight, bottom: parentBottom } = offsetParent.getBoundingClientRect();\n\n\n        const x = clientX - targetLeft - scrollLeft;\n        const y = clientY - targetTop - scrollTop;\n        const targetPageX = targetLeft - scrollLeft + topLevelElement.pageXOffset;\n        const targetPageY = targetTop - scrollTop + topLevelElement.pageYOffset;\n        const targetX = targetLeft - parentLeft - offsetLeft - scrollLeft;\n        const targetY = targetTop - parentTop - offsetTop - scrollTop;\n        const targetClientX = targetLeft - scrollLeft;\n        const targetClientY = targetTop - scrollTop;\n        const targetScreenX = (screenX - clientX) + targetLeft - scrollLeft;\n        const targetScreenY = (screenY - clientY) + targetTop - scrollTop;\n\n        const origin = new Point(time, null, null, target, identifier,\n                                 radiusX, radiusY, rotationAngle,\n                                 x, y,\n                                 pageX, pageY,\n                                 clientX, clientY,\n                                 screenX, screenY,\n                                 targetX, targetY,\n                                 targetPageX, targetPageY,\n                                 targetClientX, targetClientY,\n                                 targetScreenX, targetScreenY);\n        origin.type = type;\n        origin.xOrigin = origin.x;\n        origin.yOrigin = origin.y;\n        origin.targetTop = targetTop;\n        origin.targetLeft = targetLeft;\n        origin.targetRight = targetRight;\n        origin.targetBottom = targetBottom;\n        origin.parentTop = parentTop;\n        origin.parentLeft = parentLeft;\n        origin.parentRight = parentRight;\n        origin.parentBottom = parentBottom;\n        origin.pageXOrigin = origin.pageX;\n        origin.pageYOrigin = origin.pageY;\n        origin.clientXOrigin = origin.clientX;\n        origin.clientYOrigin = origin.clientY;\n        origin.screenXOrigin = origin.screenX;\n        origin.screenYOrigin = origin.screenY;\n        origin.targetXOrigin = origin.targetX;\n        origin.targetYOrigin = origin.targetY;\n        origin.targetPageXOrigin = origin.targetPageX;\n        origin.targetPageYOrigin = origin.targetPageY;\n        origin.targetClientXOrigin = origin.targetClientX;\n        origin.targetClientYOrigin = origin.targetClientY;\n        origin.targetScreenXOrigin = origin.targetScreenX;\n        origin.targetScreenYOrigin = origin.targetScreenY;\n\n        return origin;\n    }\n}\n"]}