{"version":3,"sources":["../../src/operators/NormalizeOperator.js"],"names":[],"mappings":"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","file":"NormalizeOperator.js","sourcesContent":["import { Point } from '../support';\nimport { Subscriber } from 'rxjs';\n\nexport class NormalizeOperator {\n    constructor(origin, Gestures, scheduler) {\n        this.origin = origin || undefined;\n        this.Gestures = Gestures;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source._subscribe(new NormalizeSubscriber(subscriber, this.origin, this.Gestures, this.scheduler));\n    }\n}\n\nexport class NormalizeSubscriber extends Subscriber {\n    constructor(subscriber, origin, Gestures, scheduler) {\n        super(subscriber);\n        this.origin = origin;\n        this.previous = origin;\n        this.Gestures = Gestures;\n        this.scheduler = scheduler;\n    }\n    _next(multitouchEvent) {\n\n        if (multitouchEvent instanceof Point) {\n            return super._next(this.previous = multitouchEvent);\n        }\n\n        let { origin } = this;\n        const time = this.scheduler.now();\n\n        const { index, event, touch, target, screenX, screenY,\n                pageX, pageY, clientX, clientY, deltaX, deltaY, deltaZ,\n                radiusX = 1, radiusY = 1, rotationAngle = 0 } = multitouchEvent;\n\n        if (!origin) {\n            this.origin = origin = NormalizeSubscriber.createOrigin(\n                multitouchEvent, touch, time, this.Gestures\n            );\n        }\n\n        const { previous = origin } = this;\n        const { pageX: prevX, pageY: prevY } = previous;\n\n        const movementX = pageX - prevX;\n        const movementY = pageY - prevY;\n        const movementT = time - previous.time;\n        const movementXTotal = movementX + previous.movementXTotal;\n        const movementYTotal = movementY + previous.movementYTotal;\n        const movementTTotal = movementT + previous.movementTTotal;\n        const direction = Math.atan2(movementY / movementT, movementX / movementT) || 0;\n        const magnitude = Math.abs(\n            Math.sqrt(Math.pow(pageX, 2) + Math.pow(pageY, 2)) -\n            Math.sqrt(Math.pow(prevX, 2) + Math.pow(prevY, 2))\n        );\n\n        const point = origin.clone();\n\n        point.time = time;\n        point.index = index;\n        point.touch = touch;\n        point.event = event;\n        point.pageX = pageX;\n        point.pageY = pageY;\n        point.movementT = movementT;\n        point.movementX = movementX;\n        point.movementY = movementY;\n        point.deltaX = deltaX;\n        point.deltaY = deltaY;\n        point.deltaZ = deltaZ;\n        point.clientX = clientX;\n        point.clientY = clientY;\n        point.screenX = screenX;\n        point.screenY = screenY;\n        point.radiusX = radiusX;\n        point.radiusY = radiusY;\n        point.magnitude = magnitude;\n        point.direction = direction;\n        point.movementXTotal = movementXTotal;\n        point.movementYTotal = movementYTotal;\n        point.movementTTotal = movementTTotal;\n        point.rotationAngle = rotationAngle;\n\n        point.x += movementXTotal;\n        point.y += movementYTotal;\n        point.targetX += movementXTotal;\n        point.targetY += movementYTotal;\n        point.targetPageX += movementXTotal;\n        point.targetPageY += movementYTotal;\n        point.targetClientX += movementXTotal;\n        point.targetClientY += movementYTotal;\n        point.targetScreenX += movementXTotal;\n        point.targetScreenY += movementYTotal;\n\n        super._next(this.previous = point);\n    }\n    static createOrigin(event, touch, time, Gestures) {\n\n        const { identifier } = touch;\n        const { topLevelElement } = Gestures;\n        const { target, pageX, pageY,\n                clientX, clientY, screenX, screenY,\n                radiusX = 1, radiusY = 1, rotationAngle = 0 } = event;\n        const { offsetParent = topLevelElement,\n                offsetLeft, offsetTop, scrollTop, scrollLeft } = target;\n        const { top: targetTop, left: targetLeft } = target.getBoundingClientRect();\n        const { top: parentTop, left: parentLeft } = offsetParent.getBoundingClientRect();\n\n        const x = clientX - targetLeft - scrollLeft;\n        const y = clientY - targetTop - scrollTop;\n        const targetPageX = targetLeft - scrollLeft + topLevelElement.pageXOffset;\n        const targetPageY = targetTop - scrollTop + topLevelElement.pageYOffset;\n        const targetX = targetLeft - parentLeft - offsetLeft - scrollLeft;\n        const targetY = targetTop - parentTop - offsetTop - scrollTop;\n        const targetClientX = targetLeft - scrollLeft;\n        const targetClientY = targetTop - scrollTop;\n        const targetScreenX = (screenX - clientX) + targetLeft - scrollLeft;\n        const targetScreenY = (screenY - clientY) + targetTop - scrollTop;\n\n        const origin = new Point(time, null, null, target, identifier,\n                                 radiusX, radiusY, rotationAngle,\n                                 x, y,\n                                 pageX, pageY,\n                                 clientX, clientY,\n                                 screenX, screenY,\n                                 targetX, targetY,\n                                 targetPageX, targetPageY,\n                                 targetClientX, targetClientY,\n                                 targetScreenX, targetScreenY);\n        origin.xOrigin = origin.x;\n        origin.yOrigin = origin.y;\n        origin.pageXOrigin = origin.pageX;\n        origin.pageYOrigin = origin.pageY;\n        origin.clientXOrigin = origin.clientX;\n        origin.clientYOrigin = origin.clientY;\n        origin.screenXOrigin = origin.screenX;\n        origin.screenYOrigin = origin.screenY;\n        origin.targetXOrigin = origin.targetX;\n        origin.targetYOrigin = origin.targetY;\n        origin.targetPageXOrigin = origin.targetPageX;\n        origin.targetPageYOrigin = origin.targetPageY;\n        origin.targetClientXOrigin = origin.targetClientX;\n        origin.targetClientYOrigin = origin.targetClientY;\n        origin.targetScreenXOrigin = origin.targetScreenX;\n        origin.targetScreenYOrigin = origin.targetScreenY;\n\n        return origin;\n    }\n}\n"]}