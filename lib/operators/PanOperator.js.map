{"version":3,"sources":["../../src/operators/PanOperator.js"],"names":["PanOperator","delay","radius","Gestures","subscriber","source","subscribe","PanSubscriber","destination","starts","topLevelElement","key","isMouse","selectPoint","moves","move","filter","ends","end","cancels","cancel","presses","press","pan"],"mappings":";;;;;;;;;;;AAAA;;AACA;;;;;;;;IAEaA,W,WAAAA,W;AACT,yBAAYC,KAAZ,EAAmBC,MAAnB,EAA2BC,QAA3B,EAAqC;AAAA;;AACjC,aAAKF,KAAL,GAAaA,KAAb;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACH;;;;6BACIC,U,EAAYC,M,EAAQ;AACrB,mBAAOA,OAAOC,SAAP,CAAiB,IAAIC,aAAJ,CAAkBH,UAAlB,EACkB,KAAKH,KADvB,EAEkB,KAAKC,MAFvB,EAGkB,KAAKC,QAHvB,CAAjB,CAAP;AAIH;;;;;;IAGQI,a,WAAAA,a;;;AACT,2BAAYC,WAAZ,EAAyBP,KAAzB,EAAgCC,MAAhC,EAAwCC,QAAxC,EAAkD;AAAA;;AAAA,kIACxCK,WADwC;;AAE9C,cAAKP,KAAL,GAAaA,KAAb;AACA,cAAKC,MAAL,GAAcA,MAAd;AACA,cAAKC,QAAL,GAAgBA,QAAhB;AAJ8C;AAKjD;;;;8BACKM,M,EAAQ;AAAA,gBAEFR,KAFE,GAE0B,IAF1B,CAEFA,KAFE;AAAA,gBAEKC,MAFL,GAE0B,IAF1B,CAEKA,MAFL;AAAA,gBAEaC,QAFb,GAE0B,IAF1B,CAEaA,QAFb;AAAA,gBAGFO,eAHE,GAGkBP,QAHlB,CAGFO,eAHE;AAAA,gBAKFC,GALE,GAKMF,MALN,CAKFE,GALE;;AAMV,gBAAMC,UAAUD,QAAQ,OAAxB;AACA,gBAAME,cAAcD,UAAU,IAAV,GAAiB,uBAASD,GAAT,CAArC;;AAEA,gBAAMG,QAAQF,UACVT,SAASY,IAAT,CAAcL,eAAd,CADU,GAEVP,SAASY,IAAT,CAAcL,eAAd,EAA+BM,MAA/B,CAAsCH,WAAtC,CAFJ;;AAIA,gBAAMI,OAAOL,UACTT,SAASe,GAAT,CAAaR,eAAb,CADS,GAETP,SAASe,GAAT,CAAaR,eAAb,EAA8BM,MAA9B,CAAqCH,WAArC,CAFJ;;AAIA,gBAAMM,UAAUP,UACZT,SAASiB,MAAT,CAAgBV,eAAhB,CADY,GAEZP,SAASiB,MAAT,CAAgBV,eAAhB,EAAiCM,MAAjC,CAAwCH,WAAxC,CAFJ;;AAIA,gBAAMQ,UAAUlB,SAASmB,KAAT,CAAeb,MAAf,EAAuBK,KAAvB,EAA8BG,IAA9B,EAAoCE,OAApC,EAA6C,EAAElB,YAAF,EAASC,cAAT,EAA7C,CAAhB;;AAEA,gIAAYC,SAASoB,GAAT,CAAaF,OAAb,EAAsBP,KAAtB,EAA6BG,IAA7B,EAAmCE,OAAnC,EAA4C,EAAElB,YAAF,EAASC,cAAT,EAA5C,CAAZ;AACH","file":"PanOperator.js","sourcesContent":["import { selectId } from '../support';\nimport { Subscriber } from 'rxjs/Subscriber';\n\nexport class PanOperator {\n    constructor(delay, radius, Gestures) {\n        this.delay = delay;\n        this.radius = radius;\n        this.Gestures = Gestures;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new PanSubscriber(subscriber,\n                                                  this.delay,\n                                                  this.radius,\n                                                  this.Gestures));\n    }\n}\n\nexport class PanSubscriber extends Subscriber {\n    constructor(destination, delay, radius, Gestures) {\n        super(destination);\n        this.delay = delay;\n        this.radius = radius;\n        this.Gestures = Gestures;\n    }\n    _next(starts) {\n\n        const { delay, radius, Gestures } = this;\n        const { topLevelElement } = Gestures;\n\n        const { key } = starts;\n        const isMouse = key === 'mouse';\n        const selectPoint = isMouse ? null : selectId(key);\n\n        const moves = isMouse ?\n            Gestures.move(topLevelElement) :\n            Gestures.move(topLevelElement).filter(selectPoint);\n\n        const ends = isMouse ?\n            Gestures.end(topLevelElement) :\n            Gestures.end(topLevelElement).filter(selectPoint);\n\n        const cancels = isMouse ?\n            Gestures.cancel(topLevelElement) :\n            Gestures.cancel(topLevelElement).filter(selectPoint);\n\n        const presses = Gestures.press(starts, moves, ends, cancels, { delay, radius });\n\n        super._next(Gestures.pan(presses, moves, ends, cancels, { delay, radius }));\n    }\n}\n"]}