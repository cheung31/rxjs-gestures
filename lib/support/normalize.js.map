{"version":3,"sources":["../../src/support/normalize.js"],"names":[],"mappings":";;;;;;;;QAIgB,S,GAAA,S;;AAJhB;;;;AAEA,IAAM,WAAW,KAAK,EAAL,GAAU,GAA3B;;AAEO,SAAS,SAAT,CAAmB,KAAnB,EAA0B;;AAE7B,QAAM,SAAS,EAAf;AAF6B,QAGrB,IAHqB,GAGJ,KAHI,CAGrB,IAHqB;AAAA,QAGf,MAHe,GAGJ,KAHI,CAGf,MAHe;;AAI7B,QAAM,UAAW,KAAK,CAAL,MAAY,GAA7B;;AAJ6B,gCAKP,OAAO,qBAAP,EALO;;AAAA,QAKrB,GALqB,yBAKrB,GALqB;AAAA,QAKhB,IALgB,yBAKhB,IALgB;AAAA,QAMrB,SANqB,GAM4B,MAN5B,CAMrB,SANqB;AAAA,QAMV,UANU,GAM4B,MAN5B,CAMV,UANU;AAAA,QAME,SANF,GAM4B,MAN5B,CAME,SANF;AAAA,QAMa,UANb,GAM4B,MAN5B,CAMa,UANb;;AAO7B,QAAM,UAAU,CAAC,OAAD,GAAW,CAAC,KAAD,CAAX,GAAqB,MAAM,IAAN,CAAW,MAAM,cAAjB,CAArC;;;;;;;AAOA,QAAI,WAAW,CAAC,CAAhB;AACA,QAAM,SAAS,QAAQ,MAAvB;;AAEC,WAAO,EAAE,QAAF,GAAa,MAApB,EAA4B;AACzB,YAAM,QAAQ,QAAQ,QAAR,CAAd;AADyB,YAEjB,OAFiB,GAEI,KAFJ,CAEjB,OAFiB;AAAA,YAER,OAFQ,GAEI,KAFJ,CAER,OAFQ;;AAGzB,YAAM,SAAS,UAAU,GAAV,GAAgB,SAAhB,GAA4B,SAA3C;AACA,YAAM,SAAS,UAAU,IAAV,GAAiB,UAAjB,GAA8B,UAA7C;AAJyB,gCAO+B,KAP/B,CAKjB,UALiB;AAAA,YAKjB,UALiB,qCAKJ,OALI;AAAA,YAMjB,KANiB,GAO+B,KAP/B,CAMjB,KANiB;AAAA,YAMV,KANU,GAO+B,KAP/B,CAMV,KANU;AAAA,YAMH,OANG,GAO+B,KAP/B,CAMH,OANG;AAAA,YAMM,OANN,GAO+B,KAP/B,CAMM,OANN;AAAA,6BAO+B,KAP/B,CAOjB,OAPiB;AAAA,YAOjB,OAPiB,kCAOP,CAPO;AAAA,6BAO+B,KAP/B,CAOJ,OAPI;AAAA,YAOJ,OAPI,kCAOM,CAPN;AAAA,mCAO+B,KAP/B,CAOS,aAPT;AAAA,YAOS,aAPT,wCAOyB,CAPzB;;;AASzB,eAAO,QAAP,IAAmB;AACf,wBADe,EACR,YADQ,EACD,cADC,EACO,cADP;AAEf,qBAAS,MAFM,EAEE,SAAS,MAFX;AAGf,4BAHe,EAGN,gBAHM,EAGG,gBAHH,EAGY,gBAHZ;AAIf,sBAJe,EAIT,YAJS,EAIF,YAJE,EAIK,sBAJL,EAIiB,gBAJjB;AAKf,oBAAQ,CALO,EAKJ,QAAQ,CALJ,EAKO,QAAQ,CALf,EAKkB,QAAQ,CAL1B;AAMf,4BANe,EAMN,gBANM,EAMG,SAAS,gBAAgB;AAN5B,SAAnB;AAQH;;AAED,WAAO,MAAP;AACH;;AAED,SAAS,aAAT,CAAuB,OAAvB,EAAgC;AAC5B,WAAO,MAAM,IAAN,CAAW,OAAX,EAAoB,MAApB,CAA2B,UAAC,OAAD,EAAU,KAAV;AAAA,4BAC3B,OAD2B,sBACjB,MAAM,UADW,EACE,KADF;AAAA,KAA3B,EAEH,EAFG,CAAP;AAGH","file":"normalize.js","sourcesContent":["import { Observable } from 'rxjs';\n\nconst degToRad = Math.PI / 180;\n\nexport function normalize(event) {\n\n    const points = [];\n    const { type, target } = event;\n    const isTouch = (type[0] === 't');\n    const { top, left } = target.getBoundingClientRect();\n    const { clientTop, clientLeft, scrollTop, scrollLeft } = target;\n    const touches = !isTouch ? [event] : Array.from(event.changedTouches);\n    // const changes = !isTouch ? [event] : Array.from(event.changedTouches);\n    // const targets = !isTouch ? changes : reduceTouches(event.targetTouches);\n    // const touches = !isTouch ? targets : changes.filter((touch) => (\n    //     targets.hasOwnProperty(touch.identifier)\n    // ));\n\n    let pointIdx = -1;\n    const length = touches.length;\n\n     while (++pointIdx < length) {\n        const point = touches[pointIdx];\n        const { clientX, clientY } = point;\n        const localY = clientY - top - clientTop + scrollTop;\n        const localX = clientX - left - clientLeft + scrollLeft;\n        const { identifier = 'mouse',\n                pageX, pageY, screenX, screenY,\n                radiusX = 1, radiusY = 1, rotationAngle = 0 } = point;\n\n        points[pointIdx] = {\n            pageX, pageY, localX, localY,\n            originX: localX, originY: localY,\n            clientX, clientY, screenX, screenY,\n            type, event, point, identifier, isTouch,\n            deltaX: 0, deltaY: 0, totalX: 0, totalY: 0,\n            radiusX, radiusY, radiusA: rotationAngle * degToRad\n        };\n    }\n\n    return points;\n}\n\nfunction reduceTouches(touches) {\n    return Array.from(touches).reduce((touches, touch) => ({\n        ...touches, [touch.identifier]: touch\n    }), {})\n}\n"]}