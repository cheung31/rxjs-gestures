{"version":3,"sources":["../src/Gestures.js"],"names":[],"mappings":"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","file":"Gestures.js","sourcesContent":["import $$observable from 'symbol-observable';\nimport { Subject, Scheduler, Observable } from 'rxjs';\nimport { epsilon, selectId } from './support';\nimport { TapOperator, PanOperator,\n         NormalizeOperator, PressOperator,\n         MultitouchOperator, DecelerateOperator,\n         PreventDefaultOperator, StopPropagationOperator } from './operators';\n\nconst mouseEvents = {\n    start: 'mousedown', end: 'mouseup',\n    move: 'mousemove', cancel: 'mouseleave',\n    wheel: 'wheel', mousewheel: 'mousewheel',\n};\n\nconst touchEvents = {\n    start: 'touchstart', end: 'touchend',\n    move: 'touchmove', cancel: 'touchcancel'\n};\n\nfunction identity(x){ return x; }\nfunction getIdentifier({ identifier }){ return identifier || 'mouse'; }\nfunction getTopLevelElement() {\n    return typeof window !== 'undefined' ?\n        window : typeof document !== 'undefined' ?\n            document : global;\n}\n\nexport function install(topLevelElement = getTopLevelElement()) {\n    return class InstalledGestures extends Gestures {\n        static topLevelElement = topLevelElement;\n    }\n}\n\nexport class Gestures extends Observable {\n    static topLevelElement = getTopLevelElement();\n    constructor(target, ...events) {\n        if (!target || typeof target === 'function' || typeof target !== 'object') {\n            super(target);\n        } else if (typeof target[$$observable] === 'function') {\n            super();\n            this.source = target[$$observable]();\n        } else if (events.length === 1) {\n            super();\n            this.source = Observable.fromEvent(target, event[0]);\n        } else {\n            super();\n            this.source = Observable.merge(...events.map((event) =>\n                Observable.fromEvent(target, event)\n            ));\n        }\n    }\n    static from(...args) {\n        return new Gestures(...args);\n    }\n    lift(operator) {\n        const observable = new this.constructor(this);\n        observable.operator = operator;\n        return observable;\n    }\n    preventDefault() {\n        return this.lift(new PreventDefaultOperator());\n    }\n    stopPropagation(immediate = false) {\n        return this.lift(new StopPropagationOperator(immediate));\n    }\n    decelerate(coefficientOfFriction = 0.25, normalForce = 9.8, scheduler = Scheduler.animationFrame) {\n        return this.lift(new DecelerateOperator(coefficientOfFriction, normalForce, scheduler));\n    }\n    inside({ x: radiusX, y: radiusY }) {\n        return this.filter(({ movementXTotal, movementYTotal }) => !epsilon(\n            radiusX, radiusY, movementXTotal, movementYTotal\n        ));\n    }\n    outside({ x: radiusX, y: radiusY }) {\n        return this.filter(({ movementXTotal, movementYTotal }) => epsilon(\n            radiusX, radiusY, movementXTotal, movementYTotal\n        ));\n    }\n    normalize(origin, Gestures_ = Gestures, scheduler = Scheduler.animationFrame) {\n        return this.lift(new NormalizeOperator(origin, Gestures_, scheduler));\n    }\n    static startsById(target = this.topLevelElement) {\n        return this.start(target).groupBy(getIdentifier);\n    }\n    static start(target = this.topLevelElement) {\n        return new this(target, mouseEvents.start, touchEvents.start).lift(new MultitouchOperator());\n    }\n    static move(target = this.topLevelElement) {\n        return new this(target, mouseEvents.move, touchEvents.move).lift(new MultitouchOperator());\n    }\n    static end(target = this.topLevelElement) {\n        return new this(target, mouseEvents.end, touchEvents.end).lift(new MultitouchOperator());\n    }\n    static cancel(target = this.topLevelElement) {\n        return new this(target, mouseEvents.cancel, touchEvents.cancel).lift(new MultitouchOperator());\n    }\n    static tap(target = this.topLevelElement, timeout = 250, radius = { x: 10, y: 10 }, ends/*OrInputs*/ = 1, cancels) {\n        if (arguments.length <= 4) {\n            return (this\n                .startsById(target)\n                .lift(new TapOperator(timeout, radius, this))\n            );\n        }\n        return (new this(target)\n            .preventDefault()\n            .normalize(null, this)\n            .mergeMap((start) => ends\n                .preventDefault()\n                .normalize(start, this)\n                .inside(radius)\n                .timeoutWith(timeout, Observable.empty())\n            )\n            .takeUntil(cancels)\n            .take(1)\n        );\n    }\n    static press(target = this.topLevelElement, delay = 0, radius = { x: 10, y: 10 }, moves/*OrInputs*/ = 1, ends, cancels) {\n        if (arguments.length <= 4) {\n            return this\n                .startsById(target)\n                .lift(new PressOperator(delay, radius, this));\n        } else if (delay <= 0) {\n            return (new this(target)\n                .normalize(null, this)\n                .take(1)\n            );\n        }\n        return (new this(target)\n            .preventDefault()\n            .normalize(null, this)\n            .mergeMap((start) => Observable\n                .timer(delay)\n                .withLatestFrom(moves\n                    .normalize(start, this)\n                    .startWith(start), (i, move) => move)\n                .takeUntil(ends\n                    .merge(cancels)\n                    .merge(moves\n                        .normalize(start, this)\n                        .outside(radius)))\n            )\n            .take(1)\n        );\n    }\n    static pan(target = this.topLevelElement, delay = 0, radius = { x: 10, y: 10 }, moves/*OrInputs*/ = 1, ends, cancels) {\n        if (arguments.length <= 4) {\n            return this\n                .startsById(target)\n                .lift(new PanOperator(delay, radius, this));\n        }\n        return (new this(target)\n            .preventDefault()\n            .mergeMap((start) => moves\n                .normalize(start, this)\n                .startWith(start))\n            .takeUntil(ends.merge(cancels))\n        );\n    }\n}\n\nexport default Gestures;\n"]}