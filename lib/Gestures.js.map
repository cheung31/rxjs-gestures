{"version":3,"sources":["../src/Gestures.js"],"names":[],"mappings":"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","file":"Gestures.js","sourcesContent":["import $$observable from 'symbol-observable';\nimport { epsilon, selectId } from './support';\nimport { Scheduler, Observable, ReplaySubject } from 'rxjs';\nimport { TapOperator, PanOperator,\n         NormalizeOperator, PressOperator,\n         MultitouchOperator, DecelerateOperator,\n         PreventDefaultOperator, StopPropagationOperator } from './operators';\n\nconst mouseEvents = {\n    start: 'mousedown', end: 'mouseup',\n    move: 'mousemove', cancel: 'mouseleave',\n    wheel: 'wheel', mousewheel: 'mousewheel',\n};\n\nconst touchEvents = {\n    start: 'touchstart', end: 'touchend',\n    move: 'touchmove', cancel: 'touchcancel'\n};\n\nfunction identity(x){ return x; }\nfunction getIdentifier({ identifier }){ return identifier || 'mouse'; }\nfunction getTopLevelElement() {\n    return typeof window !== 'undefined' ?\n        window : typeof document !== 'undefined' ?\n            document : global;\n}\n\nexport function install(topLevelElement = getTopLevelElement()) {\n    return wrapStaticObservableMethods(\n        Observable,\n        class InstalledGestures extends Gestures {\n            static topLevelElement = topLevelElement;\n            lift(operator) {\n                const observable = new InstalledGestures(this);\n                observable.operator = operator;\n                return observable;\n            }\n        });\n}\n\nclass Gestures extends Observable {\n    static topLevelElement = getTopLevelElement();\n    constructor(target, ...events) {\n        if (!target || typeof target === 'function' || typeof target !== 'object') {\n            super(target);\n        } else if (typeof target[$$observable] === 'function') {\n            super();\n            this.source = target[$$observable]();\n        } else if (events.length === 1) {\n            super();\n            this.source = Observable.fromEvent(target, event[0]);\n        } else {\n            super();\n            this.source = Observable.merge(...events.map((event) =>\n                Observable.fromEvent(target, event)\n            ));\n        }\n    }\n    lift(operator) {\n        const observable = new Gestures(this);\n        observable.operator = operator;\n        return observable;\n    }\n    preventDefault() {\n        return this.lift(new PreventDefaultOperator());\n    }\n    stopPropagation(immediate = false) {\n        return this.lift(new StopPropagationOperator(immediate));\n    }\n    decelerate(coefficientOfFriction = 25, speedLimit = 200, scheduler = Scheduler.animationFrame) {\n        return this.lift(new DecelerateOperator(coefficientOfFriction, speedLimit, scheduler));\n    }\n    inside({ x: radiusX, y: radiusY }) {\n        return this.filter(({ movementXTotal, movementYTotal }) => !epsilon(\n            radiusX, radiusY, movementXTotal, movementYTotal\n        ));\n    }\n    outside({ x: radiusX, y: radiusY }) {\n        return this.filter(({ movementXTotal, movementYTotal }) => epsilon(\n            radiusX, radiusY, movementXTotal, movementYTotal\n        ));\n    }\n    normalize(origin, Gestures_ = this.constructor, scheduler = Scheduler.animationFrame) {\n        return this.lift(new NormalizeOperator(origin, Gestures_, scheduler));\n    }\n    static startsById(target = this.topLevelElement, inputs = 1) {\n        return this\n            .start(target)\n            .groupBy(getIdentifier)\n            .take(inputs)\n            .map((group) => {\n                const connectable = group.multicast(() => new ReplaySubject(1));\n                const refCounted = connectable.refCount();\n                refCounted.key = group.key;\n                connectable.connect();\n                return refCounted;\n            });\n    }\n    static start(target = this.topLevelElement) {\n        return new this(target, mouseEvents.start, touchEvents.start).lift(new MultitouchOperator());\n    }\n    static move(target = this.topLevelElement) {\n        return new this(target, mouseEvents.move, touchEvents.move).lift(new MultitouchOperator());\n    }\n    static end(target = this.topLevelElement) {\n        return new this(target, mouseEvents.end, touchEvents.end).lift(new MultitouchOperator());\n    }\n    static cancel(target = this.topLevelElement) {\n        return new this(target, mouseEvents.cancel, touchEvents.cancel).lift(new MultitouchOperator());\n    }\n    static tap(target = this.topLevelElement, {\n                   inputs = 1, timeout = 250,\n                   radius = { x: 10, y: 10 }\n               } = {}, ends, cancels) {\n\n        if (arguments.length <= 2) {\n            return (this\n                .startsById(target, inputs)\n                .lift(new TapOperator(timeout, radius, this))\n            );\n        }\n\n        ends = (ends instanceof this) && ends || new this(ends);\n        target = (target instanceof this) && target || new this(target);\n\n        return target\n            .preventDefault()\n            .normalize(null, this)\n            .mergeMap((start) => ends\n                .preventDefault()\n                .normalize(start, this)\n                .inside(radius)\n                .timeoutWith(timeout, Observable.empty())\n            )\n            .takeUntil(cancels)\n            .take(1);\n    }\n    static press(target = this.topLevelElement, {\n                     inputs = 1, delay = 0,\n                     radius = { x: 10, y: 10 }\n                 } = {}, moves, ends, cancels) {\n        if (arguments.length <= 2) {\n            return (this\n                .startsById(target, inputs)\n                .lift(new PressOperator(delay, radius, this))\n            );\n        }\n\n        target = (target instanceof this) && target || new this(target);\n\n        if (delay <= 0) {\n            return target\n                .normalize(null, this)\n                .take(1);\n        }\n\n        moves = (moves instanceof this) && moves || new this(moves);\n\n        return target\n            .preventDefault()\n            .normalize(null, this)\n            .mergeMap((start) => Observable\n                .timer(delay)\n                .withLatestFrom(moves\n                    .normalize(start, this)\n                    .startWith(start), (i, move) => move)\n                .takeUntil(ends\n                    .merge(cancels)\n                    .merge(moves\n                        .normalize(start, this)\n                        .outside(radius)))\n            )\n            .take(1);\n    }\n    static pan(target = this.topLevelElement, {\n                   inputs = 1, delay = 0,\n                   radius = { x: 10, y: 10 },\n               } = {}, moves, ends, cancels) {\n        if (arguments.length <= 2) {\n            return this\n                .startsById(target, inputs)\n                .lift(new PanOperator(delay, radius, this))\n        }\n        ends = (ends instanceof this) && ends || new this(ends);\n        moves = (moves instanceof this) && moves || new this(moves);\n        target = (target instanceof this) && target || new this(target);\n        return target\n            .preventDefault()\n            .mergeMap((start) => moves\n                .merge(ends)\n                .normalize(start, this)\n                .startWith(start))\n            .takeUntil(ends.merge(cancels));\n    }\n}\n\nGestures = wrapStaticObservableMethods(Observable, Gestures);\n\nexport { Gestures };\nexport default Gestures;\n\nfunction wrapStaticObservableMethods(Observable, Gestures) {\n    function createStaticWrapper(staticMethodName) {\n        return function(...args) {\n            return new Gestures(Observable[staticMethodName](...args));\n        }\n    }\n    for (const staticMethodName in Observable) {\n        Gestures[staticMethodName] = createStaticWrapper(staticMethodName);\n    }\n    Gestures.bindCallback = (...args) => (...args2) => new Gestures(Observable.bindCallback(...args)(...args2));\n    Gestures.bindNodeCallback = (...args) => (...args2) => new Gestures(Observable.bindNodeCallback(...args)(...args2));\n    return Gestures;\n}\n"]}