{"version":3,"sources":["../src/Gestures.js"],"names":["install","mouseEvents","start","end","move","cancel","wheel","mousewheel","touchEvents","identity","x","getIdentifier","identifier","getReplaySubject1","getTopLevelElement","window","document","global","topLevelElement","wrapStaticObservableMethods","operator","observable","InstalledGestures","Gestures","target","events","source","length","fromEvent","event","merge","map","lift","immediate","coefficientOfFriction","speedLimit","scheduler","radiusX","radiusY","y","filter","movementXTotal","movementYTotal","origin","Gestures_","constructor","inputs","groupBy","take","starts","ends","cancels","options","arguments","timeout","radius","startsById","preventDefault","normalize","mergeMap","inside","timeoutWith","empty","takeUntil","moves","delay","timer","withLatestFrom","startWith","i","outside","Observable","createStaticWrapper","staticMethodName","bindCallback","args","bindNodeCallback"],"mappings":"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","file":"Gestures.js","sourcesContent":["import $$observable from 'symbol-observable';\nimport { epsilon, selectId } from './support';\nimport { Observable } from 'rxjs/Observable';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\nimport { TapOperator, PanOperator,\n         NormalizeOperator, PressOperator,\n         MultitouchOperator, DecelerateOperator,\n         PreventDefaultOperator, StopPropagationOperator } from './operators';\nimport { animationFrame as animationFrameScheduler } from 'rxjs/scheduler/animationFrame';\n\nconst mouseEvents = {\n    start: 'mousedown', end: 'mouseup',\n    move: 'mousemove', cancel: 'mouseleave',\n    wheel: 'wheel', mousewheel: 'mousewheel',\n};\n\nconst touchEvents = {\n    start: 'touchstart', end: 'touchend',\n    move: 'touchmove', cancel: 'touchcancel'\n};\n\nfunction identity(x){ return x; }\nfunction getIdentifier({ identifier = 'mouse' }){ return identifier; }\nfunction getReplaySubject1() { return new ReplaySubject(1); }\nfunction getTopLevelElement() {\n    return typeof window !== 'undefined' ?\n        window : typeof document !== 'undefined' ?\n            document : global;\n}\n\nexport function install(topLevelElement = getTopLevelElement()) {\n    return wrapStaticObservableMethods(\n        Observable,\n        class InstalledGestures extends Gestures {\n            static topLevelElement = topLevelElement;\n            lift(operator) {\n                const observable = new InstalledGestures(this);\n                observable.operator = operator;\n                return observable;\n            }\n        });\n}\n\nclass Gestures extends Observable {\n    static topLevelElement = getTopLevelElement();\n    constructor(target, ...events) {\n        if (!target || typeof target === 'function' || typeof target !== 'object') {\n            super(target);\n        } else if (typeof target[$$observable] === 'function') {\n            super();\n            this.source = target[$$observable]();\n        } else if (events.length === 1) {\n            super();\n            this.source = Observable.fromEvent(target, event[0]);\n        } else {\n            super();\n            this.source = Observable.merge(...events.map((event) =>\n                Observable.fromEvent(target, event)\n            ));\n        }\n    }\n    lift(operator) {\n        const observable = new Gestures(this);\n        observable.operator = operator;\n        return observable;\n    }\n    preventDefault() {\n        return this.lift(new PreventDefaultOperator());\n    }\n    stopPropagation(immediate = false) {\n        return this.lift(new StopPropagationOperator(immediate));\n    }\n    decelerate(coefficientOfFriction = 25, speedLimit = 3000/* px/s */, scheduler = animationFrameScheduler) {\n        return this.lift(new DecelerateOperator(coefficientOfFriction, speedLimit, scheduler));\n    }\n    inside({ x: radiusX, y: radiusY }) {\n        return this.filter(({ movementXTotal, movementYTotal }) => !epsilon(\n            radiusX, radiusY, movementXTotal, movementYTotal\n        ));\n    }\n    outside({ x: radiusX, y: radiusY }) {\n        return this.filter(({ movementXTotal, movementYTotal }) => epsilon(\n            radiusX, radiusY, movementXTotal, movementYTotal\n        ));\n    }\n    normalize(origin, Gestures_ = this.constructor, scheduler = animationFrameScheduler) {\n        return this.lift(new NormalizeOperator(origin, Gestures_, scheduler));\n    }\n    static startsById(target = this.topLevelElement, inputs = 1) {\n        return this\n            .start(target)\n            .groupBy(getIdentifier, null, null, getReplaySubject1)\n            .take(inputs);\n    }\n    static start(target = this.topLevelElement) {\n        return new this(target, mouseEvents.start, touchEvents.start).lift(new MultitouchOperator());\n    }\n    static move(target = this.topLevelElement) {\n        return new this(target, mouseEvents.move, touchEvents.move).lift(new MultitouchOperator());\n    }\n    static end(target = this.topLevelElement) {\n        return new this(target, mouseEvents.end, touchEvents.end).lift(new MultitouchOperator());\n    }\n    static cancel(target = this.topLevelElement) {\n        return new this(target, mouseEvents.cancel, touchEvents.cancel).lift(new MultitouchOperator());\n    }\n    static tap(starts = this.topLevelElement, ends = {}, cancels, options = {}) {\n\n        const {\n            inputs = 1, timeout = 250,\n            radius = { x: 10, y: 10 }\n        } = arguments.length <= 2 ? ends : options;\n\n        if (arguments.length <= 2) {\n            return (this\n                .startsById(starts, inputs)\n                .lift(new TapOperator(timeout, radius, this))\n            );\n        }\n\n        ends = (ends instanceof this) && ends || new this(ends);\n        starts = (starts instanceof this) && starts || new this(starts);\n\n        return starts\n            .preventDefault()\n            .normalize(null, this)\n            .mergeMap((start) => ends\n                .preventDefault()\n                .normalize(start, this)\n                .inside(radius)\n                .timeoutWith(timeout, Observable.empty())\n            )\n            .takeUntil(cancels)\n            .take(1);\n    }\n    static press(starts = this.topLevelElement, moves = {}, ends, cancels, options = {}) {\n\n        const {\n            inputs = 1, delay = 0,\n            radius = { x: 10, y: 10 }\n        } = arguments.length <= 2 ? moves : options;\n\n        if (arguments.length <= 2) {\n            return (this\n                .startsById(starts, inputs)\n                .lift(new PressOperator(delay, radius, this))\n            );\n        }\n\n        starts = (starts instanceof this) && starts || new this(starts);\n\n        if (delay <= 0) {\n            return starts\n                .normalize(null, this)\n                .take(1);\n        }\n\n        moves = (moves instanceof this) && moves || new this(moves);\n\n        return starts\n            .preventDefault()\n            .normalize(null, this)\n            .mergeMap((start) => Observable\n                .timer(delay)\n                .withLatestFrom(moves\n                    .normalize(start, this)\n                    .startWith(start), (i, move) => move)\n                .takeUntil(ends\n                    .merge(cancels)\n                    .merge(moves\n                        .normalize(start, this)\n                        .outside(radius)))\n            )\n            .take(1);\n    }\n    static pan(starts = this.topLevelElement, moves = {}, ends, cancels, options = {}) {\n\n        const {\n            inputs = 1, delay = 0,\n            radius = { x: 10, y: 10 },\n        } = arguments.length <= 2 ? moves : options;\n\n        if (arguments.length <= 2) {\n            return this\n                .startsById(starts, inputs)\n                .lift(new PanOperator(delay, radius, this))\n        }\n\n        ends = (ends instanceof this) && ends || new this(ends);\n        moves = (moves instanceof this) && moves || new this(moves);\n        starts = (starts instanceof this) && starts || new this(starts);\n\n        return starts\n            .preventDefault()\n            .mergeMap((start) => moves\n                .merge(ends)\n                .normalize(start, this)\n                .startWith(start))\n            .takeUntil(ends.merge(cancels));\n    }\n}\n\nGestures = wrapStaticObservableMethods(Observable, Gestures);\n\nexport { Gestures };\nexport default Gestures;\n\nfunction wrapStaticObservableMethods(Observable, Gestures) {\n    function createStaticWrapper(staticMethodName) {\n        return function(...args) {\n            return new Gestures(Observable[staticMethodName](...args));\n        }\n    }\n    for (const staticMethodName in Observable) {\n        Gestures[staticMethodName] = createStaticWrapper(staticMethodName);\n    }\n    Gestures.bindCallback = (...args) => (...args2) => new Gestures(Observable.bindCallback(...args)(...args2));\n    Gestures.bindNodeCallback = (...args) => (...args2) => new Gestures(Observable.bindNodeCallback(...args)(...args2));\n    return Gestures;\n}\n"]}